{"version":3,"sources":["Components/reallogo.png","Components/barkley.jpg","Components/List.js","Components/RealNavbar.js","Components/Navbar.js","Components/Teams.js","Components/Carousel.js","Components/Mainstage.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","List","team","abbr","conference","division","schoolBus","className","value","map","item","style","height","RealNavbar","Component","Navbar","click","padding","src","require","type","peanut","paddingRight","Teams","display","flexWrap","flexDirection","backgroundColor","color","justifyContent","Carousel","state","imgUrl","width","this","React","Mainstage","App","homeClick","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f21aea43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reallogo.db5d5e4b.png\";","module.exports = __webpack_public_path__ + \"static/media/barkley.0ef66320.jpg\";","const List = [\r\n    {\r\n      team: \"Arizona Cardinals\",\r\n      abbr: \"ARI\",\r\n      conference: \"NFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Atlanta Falcons\",\r\n      abbr: \"ATL\",\r\n      conference: \"NFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Baltimore Ravens\",\r\n      abbr: \"BAL\",\r\n      conference: \"AFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Buffalo Bills\",\r\n      abbr: \"BUF\",\r\n      conference: \"AFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"Carolina Panthers\",\r\n      abbr: \"CAR\",\r\n      conference: \"NFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Chicago Bears\",\r\n      abbr: \"CHI\",\r\n      conference: \"NFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Cincinnati Bengals\",\r\n      abbr: \"CIN\",\r\n      conference: \"AFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Cleveland Browns\",\r\n      abbr: \"CLE\",\r\n      conference: \"AFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Dallas Cowboys\",\r\n      abbr: \"DAL\",\r\n      conference: \"NFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"Denver Broncos\",\r\n      abbr: \"DEN\",\r\n      conference: \"AFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Detroit Lions\",\r\n      abbr: \"DET\",\r\n      conference: \"NFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Green Bay Packers\",\r\n      abbr: \"GB\",\r\n      conference: \"NFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"Houston Texans\",\r\n      abbr: \"HOU\",\r\n      conference: \"AFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Indianapolis Colts\",\r\n      abbr: \"IND\",\r\n      conference: \"AFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Jacksonville Jaguars\",\r\n      abbr: \"JAX\",\r\n      conference: \"AFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Kansas City Chiefs\",\r\n      abbr: \"KC\",\r\n      conference: \"AFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Miami Dolphins\",\r\n      abbr: \"MIA\",\r\n      conference: \"AFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"Minnesota Vikings\",\r\n      abbr: \"MIN\",\r\n      conference: \"NFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"New England Patriots\",\r\n      abbr: \"NE\",\r\n      conference: \"AFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"New Orleans Saints\",\r\n      abbr: \"NO\",\r\n      conference: \"NFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"NY Giants\",\r\n      abbr: \"NYG\",\r\n      conference: \"NFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"NY Jets\",\r\n      abbr: \"NYJ\",\r\n      conference: \"AFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"Oakland Raiders\",\r\n      abbr: \"OAK\",\r\n      conference: \"AFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Philadelphia Eagles\",\r\n      abbr: \"PHI\",\r\n      conference: \"NFC\",\r\n      division: \"East\"\r\n    },\r\n    {\r\n      team: \"Pittsburgh Steelers\",\r\n      abbr: \"PIT\",\r\n      conference: \"AFC\",\r\n      division: \"North\"\r\n    },\r\n    {\r\n      team: \"San Diego Chargers\",\r\n      abbr: \"SD\",\r\n      conference: \"AFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"San Francisco 49ers\",\r\n      abbr: \"SF\",\r\n      conference: \"NFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Seattle Seahawks\",\r\n      abbr: \"SEA\",\r\n      conference: \"NFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"St. Louis Rams\",\r\n      abbr: \"STL\",\r\n      conference: \"NFC\",\r\n      division: \"West\"\r\n    },\r\n    {\r\n      team: \"Tampa Bay Buccaneers\",\r\n      abbr: \"TB\",\r\n      conference: \"NFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Tennessee Titans\",\r\n      abbr: \"TEN\",\r\n      conference: \"AFC\",\r\n      division: \"South\"\r\n    },\r\n    {\r\n      team: \"Washington Redskins\",\r\n      abbr: \"WAS\",\r\n      conference: \"NFC\",\r\n      division: \"East\"\r\n    }\r\n  ]\r\n\r\nexport default List","import React, { Component } from \"react\";\r\nimport \"./RealNavbar.css\"\r\nconst items = [\r\n  <div><button className=\"hex\" value=\"News\">News</button></div>,\r\n  <div><button className=\"hex\"value=\"Scores\">Scores</button></div>,\r\n  <div><button className=\"hex\"value=\"Playoffs\">Playoffs</button></div>,\r\n  <div><button className=\"hex\"value=\"Tickets\">Tickets</button></div>,\r\n  <div><button className=\"hex\"value=\"Charity\">Charity</button></div>,\r\n  <div><button className=\"hex\"value=\"Contact\">Contact</button></div>\r\n];\r\nconst schoolBus = items.map((item) => {\r\n  return <div style={{height: \"auto\"}}>{item}</div>\r\n})\r\n \r\nclass RealNavbar extends Component {\r\n  render() {\r\n    return (\r\n      \r\n          \r\n            <div className=\"dog\">{schoolBus}</div>\r\n         \r\n      \r\n    );\r\n  }\r\n}\r\n \r\nexport default RealNavbar;","import React from 'react';\r\nimport List from './List';\r\nimport RealNavbar from './RealNavbar'\r\nimport './Navbar.css';\r\n\r\n\r\n\r\nfunction Navbar({ click }) {\r\n\treturn (\r\n\t\t<div className=\"proto\">\r\n\t\t\t<img \r\n\t\t\tclassName=\"table\"\r\n\t\t\tstyle={{padding:\"0px 15px\"}}\r\n\t\t\tsrc={require(\"./reallogo.png\")} />\r\n\t\t\t<input className=\"button\"type=\"submit\" value=\"Subscribe Free\"/>\r\n\t\t\t<RealNavbar />\r\n\t</div>)\r\n}\r\n\r\nexport default Navbar","import React from 'react' \r\nimport List from './List';\r\n\r\nconst peanut = List.map((item) => {\r\n\treturn <div className=\"teams\" style={{paddingRight: '2px'}}>\r\n\t\t || {item.team } ||\r\n\t</div>\r\n})\r\n\r\nfunction Teams() {\r\n\treturn (\t\r\n\t\t\t\t<div style={{display: \"flex\", flexWrap: \"wrap\", flexDirection: \"row\", backgroundColor: \"navy\", color: \"white\", justifyContent: \"center\"}}>\r\n\t\t\t\t\t{peanut}\r\n\t\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Teams","import React from 'react';\r\n\r\n\r\nclass Carousel extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\timgUrl: require(\"./barkley.jpg\")\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<img width=\"800\" height=\"420\"src={this.state.imgUrl}/>\r\n\t\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default Carousel","import React from 'react';\r\nimport \"./Mainstage.css\";\r\nimport Carousel from './Carousel';\r\n\r\n\r\nclass Mainstage extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mainstage\">\r\n\t\t\t\t<Carousel />\r\n\t\t\t</div>)\r\n\t}\r\n}\r\n\r\nexport default Mainstage","import React from 'react';\nimport Navbar from '../Components/Navbar';\nimport Teams from '../Components/Teams';\nimport RealNavbar from '../Components/RealNavbar'\nimport Mainstage from '../Components/Mainstage'\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  homeClick = () => {\n    console.log(\"home\")\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar click={this.homeClick} />\n        <h1 className=\"headline\">Need the latest NFL highlights, news, and scores?</h1>\n        <Mainstage />\n        <Teams />\n      </div>)\n  }\n}\n\nexport default App;\n\n// make more responsive\n// compress picture\n// clean up folders","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}